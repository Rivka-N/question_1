using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace part2

{
    class HostingUnit
    {
        private bool[,] diary;//state of hosting unit occupancy



       public bool this[int month, int day]
        {
            get
            { return diary[month - 1, day - 1]; }
            set
            {
                diary[month - 1, day - 1] = value;
            }
        }

        //    get()
        //    {
        //    int i = 1;
        //if (i==1)
        //    return i;
        //    return i;
        //    }
            /*public bool[,] Get()
        {
            return diary;
        }*/


        public HostingUnit()//c-tor
        {
            diary = new bool[12, 31];//creates array
            for (int i = 0; i < 12; i++)
            {
                for (int j = 0; j < 31; j++)
                {
                    diary[i, j] = false;//initializes all the array to be false
                }
            }
        }
        public bool OrderStay()//orders a place in the hotel. if succeeded returns true. false otherwise
        {
            Console.WriteLine("enter day and month of stay");
            int day = Convert.ToInt32(Console.ReadLine());
            int month = Convert.ToInt32(Console.ReadLine());
            DateTime date = new DateTime(2020, month, day);
            Console.WriteLine("how many days is your stay?");
            int stay = Convert.ToInt32(Console.ReadLine());
            return checkDates(date, stay);
        }

        public bool checkDates(DateTime date, int stayLen)
        {
            DateTime temp=date;
            for (int i = 1; i < stayLen-1; i++)//checks all but the last day
            {
                //if (d > 31)//goes to next month
                //{
                //    d = 1;
                //    m = m + 1;//goes to next month
                //}
                if (this[temp.Month, temp.Day] == true)//if it's booked
                    return false;//not available
                temp = temp.AddDays(1);
            }
            temp = date;//resets temp
            for (int i = 0; i < stayLen-1; i++)
            {
                //the last day's night isn't booked because he leaves in the morning
                //if (d > 31)//goes to next month
                //{
                //    d = 1;
                //    m = m + 1;//goes to next month
                //}
                this[temp.Month, temp.Day] = true;//updates to true
                temp = temp.AddDays(1);
            }
            return true;
        }

        public void FullDays()
        {
            for (DateTime help = new DateTime(2020, 1, 1); help.Year != 2021; help = help.AddDays(1))
            //while(help.Year!=2021)//while it's in this year
            {
                if (this[help.Month, help.Day]==true)
                {
                    DateTime startDate = new DateTime(2020, help.Month, help.Day);
                    help = help.AddDays(1);//goes to next day to check
                    while (this[help.Month, help.Day]==true)
                    {
                        help=help.AddDays(1);//adds day to stay
                    }
                    help=help.AddDays(1);
                    string format = "dd/MM";
                    Console.Write(startDate.ToString(format));
                    Console.WriteLine("-" + help.ToString(format));
                }
            }

                //for (int i = 1; i < 12; i++)
                //{
                //    for (int j = 1; j < 31; j++)
                //    {
                //        if (this[i, j] == true)
                //        {
                //            DateTime date1 = new DateTime(2000, i, j);
                //            DateTime date2 = new DateTime(2000, i, j);
                //            i++; j++;
                //            while (this[i, j] == true)
                //            {
                //                date2 = date2.AddDays(1);
                //                i++; j++;
                //            }
                //            date2=date2.AddDays(1);//to show number of days and not nights
                //            string format = "dd/MM";
                //            Console.Write(date1.ToString(format));
                //            Console.WriteLine("-" + date2.ToString(format));
                //        }
                //    }
                //}
            }

        public void TotalDays()
        {
            int count = 0;
            for (int i = 1; i < 12; i++)
            {
                for (int j = 1; j < 31; j++)
                {
                    if (this[i, j] == true)
                        count++;        
                }
            }
            count++;//to add last day
            Console.WriteLine("the total number of booked days is " + count);
            Console.WriteLine((count/365.0).ToString("0.00%"));
            //Console.WriteLine(" " + count / 365.0 + "percent of the total nights available");
        }
    }
}
